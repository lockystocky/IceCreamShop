@model IEnumerable<IceCreamShop.Models.MenuItem>
@using Microsoft.AspNet.Identity

@if (Request.IsAuthenticated)
{
    <p id="identity" style="display:none">IsAuthentificated</p>
}
@{
    ViewBag.Title = "Index";
}

<img src="~/Content/drawice.jpg" width="100%" />
<div class="row">
    <div class="col-md-3">
        <div class="btn-group-vertical btn-block" >
            <button type="button" class="btn btn-light category" value="IceCream">Ice cream</button>
            <button type="button" class="btn btn-light category" value="Yogurt">Yogurt</button>
            <button type="button" class="btn btn-light category" value="Drink">Drinks</button>
        </div>
        
    </div>
    <div id="menu" class="col-md-6">

        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Weight)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Price)
                </th>
                @if (Request.IsAuthenticated)
                {
                    <th></th>
                }
            </tr>

            @foreach (var item in Model)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Weight)
                </td>
                <td>                    
                    @Html.DisplayFor(modelItem => item.Price)                    
                </td>

                @if (Request.IsAuthenticated)
                {
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                        @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                    </td>
                }
            </tr>
            }

        </table>

    </div>
    <div id="cart" class="col-md-3">
    </div>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/numeral.js/2.0.6/numeral.min.js"></script>
    <script>

        function addItem(itemId) {

        }

        function fillMenu(data) {
            if ($.isEmptyObject(data)) {
                $('#menu')
                    .empty()
                    .append($('<p>').text('No items available'));
                return;
            }
            $('#menu').empty();
        var table = $('<table class="table">');
        var theader = $('<tr>')
            .append($('<th>').text('Name'))
            .append($('<th>').text('Weight'))
            .append($('<th>').text('Price'))
            .append($('<th>'));
        table.append(theader);

        $.each(data, function () {
            var menuItem = this;
            var newRow = $('<tr>')
                .append($('<td>').text(menuItem.Name))
                .append($('<td>').text(menuItem.Weight + ' g'))
                // .append($('<td>').text(menuItem.Price + ' $'));
                .append($('<td>').text(numeral(menuItem.Price).format('$0,0.00')));

            if ($('#identity').length > 0) {
                var addLink = $('<a>').attr('name', menuItem.Id)
                    .addClass('add-item')
                    .attr('href', '/menu/createitem/' + this.Id)
                    .text('Add');
                newRow.append($('<td>').append(addLink));
            }

            table.append(newRow);
        });

        $('#menu').append(table);

        $('a.add-item').click(
            function () {
                var itemId = $(this).attr('name');
                addItem(itemId);
            });
    };

    $('button.category').click(function () {
        var category = $(this).val();
        $.getJSON('/menu/filtereditems', {categParam: category })
            .done(function (data) {
               fillMenu(data);
            });
    });

    function fillCart(order) {
        var div = $('<div>').append($('<a>').text('Your Shopping Cart:').attr('href', '/shoppingcart'));
        var ul = $('<ul>');

        $.each(order.OrderedItems, function () {
            var orderItem = this;
            var li = $('<li>').text(orderItem.Name + ' ' + orderItem.Price + ' $')
                .appendTo(ul);
        });
        div.append(ul);
        var bill = $('<p>').text('Total bill: ' + order.TotalBill + ' $').appendTo(div);
        $('#cart').append(div);
    };

    $(function () {
        if ($('#identity').length > 0) {
            $.getJSON('/menu/getorder')
             .done(function (order) {
               fillCart(order)
             });
        }
    });


</script>
